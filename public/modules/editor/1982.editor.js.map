{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-template/AltrpTemplate.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js"],"names":["TemplateLoader","this","resource","Resource","route","templatesCache","AltrpModel","templateId","force","update","Number","hasProperty","_","get","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","isArray","forEach","callback","loadTemplate","templateData","JSON","parse","frontElementsFabric","window","templateLoader","props","state","templateGUID","settings","updateTemplate","loading","setState","className","React","componentClass","element","ElementWrapper","children","Component","FrontElementsFabric","object","parent","pageId","models","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","type","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c","ElementWrapperDivComponent","styled","styles","layout_column_width","getResponsiveSetting","updateStore","currentModel","appStore","getState","currentUser","currentDataStorage","elementDisplay","getSettings","wrapper","elementWrapperRef","createRef","elementRef","dispatch","addElement","error","errorInfo","isEditor","frontApp","onWidgetMount","isFunction","updateFonts","checkElementDisplay","stylesModule","stylesContainer","current","getElementsByClassName","getId","prevProps","prevState","getName","title","currentTitle","replaceContentWithData","altrpPage","changeCurrentPageProperty","setTitle","updateToken","altrpRandomId","conditions","map","modelField","conditional_model_field","operator","conditional_other_operator","value","conditional_other_condition_value","conditionsChecker","getCurrentModel","formsStore","formId","logic","formConditions","display","altrpCompare","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","hide_on_trigger","isFixed","tooltip_text","tooltip_position","classes","getType","getPrefixClasses","data-eltype","style","whiteSpace","toString","componentStack","width","CSSId","getData","ContentComponent","getComponentClass","content","createElement","ref","rootElement","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","getTemplateType","WrapperComponent","GalleryComponent","ImageComponent","ButtonComponent","TextComponent","CarouselComponent","DividerComponent","AccordionComponent","MenuComponent","BreadcrumbsComponent","hideTriggers","includes","elementId","AltrpTooltip","position","connect","forwardRef","withRouter"],"mappings":"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","file":"1982.editor.js","sourcesContent":["import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nclass TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel({});\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n  \r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;","import React, { Component } from \"react\";\r\nimport templateLoader from \"../../classes/modules/TemplateLoader\";\r\nimport ElementWrapper from \"../../../../../front-app/src/js/components/ElementWrapper\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\nclass AltrpTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateGUID: this.props.settings.template\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateTemplate();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateTemplate();\r\n  }\r\n\r\n  /**\r\n   * Обновляем данные шалона\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateTemplate() {\r\n    // console.log(this.props.element.getSettings('template'));\r\n    const templateGUID = this.props.settings.template;\r\n    if (\r\n      templateGUID !== this.state.templateGUID ||\r\n      !(this.state.template || this.loading)\r\n    ) {\r\n      let template;\r\n      if (!templateGUID) {\r\n        return;\r\n      } else {\r\n        this.loading = true;\r\n        template = await templateLoader.loadParsedTemplate(templateGUID);\r\n        this.loading = false;\r\n        this.template = null;\r\n      }\r\n      this.setState(state => ({ ...state, template, templateGUID }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.settings.template) {\r\n      return null;\r\n    }\r\n    if (_.get(this.state, \"template.componentClass\")) {\r\n      let template =\r\n        this.template || frontElementsFabric.cloneElement(this.state.template);\r\n      this.template = template;\r\n      return (\r\n        <div className=\"altrp-posts\">\r\n          <div className=\"altrp-post\">\r\n            {React.createElement(template.componentClass, {\r\n              element: template,\r\n              ElementWrapper: ElementWrapper,\r\n              children: template.children\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AltrpTemplate;\r\n","import FrontElement from \"./FrontElement\";\r\n\r\nclass FrontElementsFabric {\r\n  /**\r\n   * парсим данные шаблона\r\n   * @param {object} object\r\n   * @param {FrontElement | null} parent\r\n   * @param {int | null} pageId\r\n   * @param {array | null} models\r\n   * @return {FrontElement}\r\n   */\r\n  parseData(object, parent, pageId, models){\r\n    let children = [];\r\n    /**\r\n     * @member {FrontElement} element\r\n     * */\r\n    let element = new FrontElement(object);\r\n    if(pageId){\r\n      element.addModelInfo({\r\n        modelName: 'page',\r\n        modelId: pageId,\r\n      });\r\n    }\r\n    if(_.isArray(models)){\r\n      for(let model of models){\r\n        element.addModelInfo({\r\n            ...model,\r\n        });\r\n      }\r\n    }\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        window.frontElementsManager.checkElementExists(child.name) ?\r\n            children.push( this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.lastElement = object.lastElement;\r\n    element.children = children;\r\n    element.settings = object.settings;\r\n    element.name = object.name;\r\n    element.type = object.type;\r\n    element.dynamicContentSettings = object.dynamicContentSettings;\r\n    if(parent){\r\n      element.setParent(parent);\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Правильное клонирование элемента\r\n   * @params {FrontElement} element\r\n   * @return {FrontElement | null}\r\n   */\r\n  cloneElement(element){\r\n    if(! element){\r\n      return null;\r\n    }\r\n    let clonedElement = _.cloneDeep(element);\r\n    // console.log(element.idForAction);\r\n    this.updateParents(clonedElement);\r\n    return clonedElement\r\n  }\r\n\r\n  /**\r\n   * Обновляет ссылку на родителя у элементов\r\n   * @params {FrontElement} element\r\n   */\r\n\r\n  updateParents(element){\r\n    if(_.isArray(element.children)){\r\n      element.children.forEach(c=>{\r\n        c.setParent(element);\r\n        this.updateParents(c);\r\n        // console.log(c);\r\n      });\r\n    }\r\n  }\r\n}\r\nwindow.frontElementsFabric = new FrontElementsFabric();\r\nexport default window.frontElementsFabric;\r\n","import styled from 'styled-components';\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;","\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { altrpCompare, altrpRandomId, conditionsChecker, isEditor, replaceContentWithData, setTitle } from \"../helpers\";\r\nimport { addElement } from \"../store/elements-storage/actions\";\r\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\r\nimport ImageComponent from \"../../../../editor/src/js/components/widgets/styled-components/ImageComponent\";\r\nimport CarouselComponent from \"../../../../editor/src/js/components/widgets/styled-components/CarouselComponent\";\r\nimport GalleryComponent from \"../../../../editor/src/js/components/widgets/styled-components/GalleryComponent\";\r\nimport ButtonComponent from \"../../../../editor/src/js/components/widgets/styled-components/ButtonComponent\";\r\nimport DividerComponent from \"../../../../editor/src/js/components/widgets/styled-components/DividerComponent\";\r\nimport AccordionComponent from \"../../../../editor/src/js/components/widgets/styled-components/AccordionComponent\";\r\nimport TextComponent from \"../../../../editor/src/js/components/widgets/styled-components/TextComponent\";\r\nimport MenuComponent from \"../../../../editor/src/js/components/widgets/styled-components/MenuComponent\";\r\nimport BreadcrumbsComponent from \"../../../../editor/src/js/components/widgets/styled-components/BreadcrumbsComponent\";\r\n\r\nclass ElementWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\r\n    };\r\n    props.element.wrapper = this;\r\n    this.elementWrapperRef = React.createRef();\r\n    this.elementRef = React.createRef();\r\n    appStore.dispatch(addElement(this));\r\n  }\r\n\r\n  /**\r\n   * Отлавливаем ошибки\r\n   * @param error\r\n   * @param errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Иногда надо обновить элемент (FrontElement)\r\n   */\r\n  componentDidMount() {\r\n    ! isEditor() && window.frontApp.onWidgetMount();\r\n    if (_.isFunction(this.props.element.update)) {\r\n      this.props.element.update();\r\n      this.props.element.updateFonts();\r\n    }\r\n    this.checkElementDisplay();\r\n  }\r\n  /**\r\n   * Подписываемся на обновление store редакса\r\n   */\r\n  updateStore = () => {\r\n    if (this.state.currentModel !== appStore.getState().currentModel) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentModel\r\n      }));\r\n    }\r\n    /**\r\n     * Обновляем пользователя\r\n     */\r\n    if (this.state.currentUser !== appStore.getState().currentUser) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentUser\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Обновляем currentDataStorage\r\n     */\r\n    if (\r\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentDataStorage: appStore.getState().currentDataStorage\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\r\n   * @return {null | HTMLElement}\r\n   */\r\n  getStylesHTMLElement() {\r\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\r\n        `altrp-styles${this.props.element.getId()}`\r\n      )[0] || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Нужно ли обновить отображение обертки элементов\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkElementDisplay();\r\n    if (appStore.getState().currentModel.getProperty('altrpModelUpdated') &&\r\n      appStore.getState().currentDataStorage.getProperty('currentDataStorageLoaded') &&\r\n      !isEditor() &&\r\n      this.props.element.getName() === 'section') {\r\n      let title = appStore.getState().currentTitle;\r\n      title = replaceContentWithData(title);\r\n      if (appStore.getState().altrpPage.getProperty('title') !== title) {\r\n        appStore.dispatch(changeCurrentPageProperty('title', title));\r\n      }\r\n      setTitle(title);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновить элемент изменив this.state.updateToken\r\n   */\r\n  updateElement() {\r\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }))\r\n  }\r\n\r\n  /**\r\n   * Проверка видимости элемента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  checkElementDisplay(prevProps, prevState) {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const { element } = this.props;\r\n    if (!element.getSettings(\"conditional_other\")) {\r\n      return;\r\n    }\r\n    let conditions = element.getSettings(\"conditions\", []);\r\n    conditions = conditions.map(c => {\r\n      const {\r\n        conditional_model_field: modelField,\r\n        conditional_other_operator: operator,\r\n        conditional_other_condition_value: value\r\n      } = c;\r\n      return {\r\n        modelField,\r\n        operator,\r\n        value\r\n      };\r\n    });\r\n    let elementDisplay = conditionsChecker(\r\n      conditions,\r\n      element.getSettings(\"conditional_other_display\") === \"AND\",\r\n      this.props.element.getCurrentModel(),\r\n      true\r\n    );\r\n\r\n    if (this.state.elementDisplay === elementDisplay) {\r\n      return;\r\n    }\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Переключает видимость элемента\r\n   */\r\n  toggleElementDisplay() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay: !state.elementDisplay\r\n    }));\r\n  }\r\n  /**\r\n   * Метод для проверки видимости поля формы\r\n   * @return {boolean}\r\n   */\r\n  inputIsDisplay() {\r\n    const { formsStore } = this.state;\r\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\r\n    const logic = this.props.element.getSettings(\r\n      \"form_condition_display_on\",\r\n      \"AND\"\r\n    );\r\n    const formConditions = this.props.element.getSettings(\r\n      \"form_conditions\",\r\n      []\r\n    );\r\n    let display = true;\r\n    formConditions.forEach(c => {\r\n      if (logic === \"AND\") {\r\n        display *= altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      } else {\r\n        display += altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      }\r\n    });\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hide_on_wide_screen,\r\n      hide_on_desktop,\r\n      hide_on_laptop,\r\n      hide_on_tablet,\r\n      hide_on_big_phone,\r\n      hide_on_small_phone,\r\n      hide_on_trigger,\r\n      isFixed,\r\n      tooltip_text,\r\n      tooltip_position\r\n    } = this.props.element.settings;\r\n    let classes = `altrp-element altrp-element${this.props.element.getId()} altrp-element_${this.props.element.getType()}`;\r\n    classes += this.props.element.getPrefixClasses() + \" \";\r\n    if (this.props.element.getType() === \"widget\") {\r\n      classes += ` altrp-widget_${this.props.element.getName()}`;\r\n    }\r\n    if (hide_on_wide_screen) {\r\n      classes += \" hide_on_wide_screen\";\r\n    }\r\n    if (hide_on_desktop) {\r\n      classes += \" hide_on_desktop\";\r\n    }\r\n    if (hide_on_laptop) {\r\n      classes += \" hide_on_laptop\";\r\n    }\r\n    if (hide_on_tablet) {\r\n      classes += \" hide_on_tablet\";\r\n    }\r\n    if (hide_on_big_phone) {\r\n      classes += \" hide_on_big_phone\";\r\n    }\r\n    if (hide_on_small_phone) {\r\n      classes += \" hide_on_small_phone\";\r\n    }\r\n    if (isFixed) {\r\n      classes += \" fixed-section\";\r\n    }\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <div className=\"altrp-error\" data-eltype={this.props.element.getType()}>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    const styles = {};\r\n\r\n    if (this.props.element.getResponsiveSetting('layout_column_width')) {\r\n      if (Number(this.props.element.getResponsiveSetting('layout_column_width'))) {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width') + '%';\r\n      } else {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width');\r\n      }\r\n    }\r\n    if (!this.state.elementDisplay) {\r\n      styles.display = \"none\";\r\n    }\r\n    let CSSId = this.props.element.getSettings(\"advanced_element_id\", \"\");\r\n    CSSId = replaceContentWithData(CSSId, this.props.element.getCurrentModel().getData());\r\n    if (this.CSSId !== CSSId) {\r\n      this.CSSId = CSSId;\r\n    }\r\n    let ContentComponent = frontElementsManager.getComponentClass(this.props.element.getName());\r\n    const content = React.createElement(ContentComponent, {\r\n      ref: this.elementRef,\r\n      rootElement: this.props.rootElement,\r\n      ElementWrapper: this.props.ElementWrapper,\r\n      element: this.props.element,\r\n      children: this.props.element.getChildren(),\r\n      match: this.props.match,\r\n      currentModel: this.props.currentModel,\r\n      currentUser: this.props.currentUser,\r\n      currentDataStorage: this.props.currentDataStorage,\r\n      altrpresponses: this.props.altrpresponses,\r\n      formsStore: this.props.formsStore,\r\n      elementDisplay: this.state.elementDisplay,\r\n      altrpPageState: this.props.altrpPageState,\r\n      altrpMeta: this.props.altrpMeta,\r\n      updateToken: this.state.updateToken,\r\n      currentScreen: this.props.currentScreen,\r\n      baseRender: this.props.baseRender,\r\n      history: this.props.history,\r\n      appStore\r\n    });\r\n    if (this.props.element.getTemplateType() === 'email') {\r\n      if (!this.state.elementDisplay) {\r\n        return null;\r\n      }\r\n      return <>\r\n        {content}\r\n      </>\r\n    }\r\n\r\n    let WrapperComponent = ElementWrapperDivComponent;\r\n\r\n    switch (this.props.element.getName()) {\r\n      case \"gallery\":\r\n        WrapperComponent = GalleryComponent;\r\n        break\r\n      case \"image\":\r\n        WrapperComponent = ImageComponent;\r\n        break\r\n      case \"button\":\r\n        WrapperComponent = ButtonComponent;\r\n        break\r\n      case \"text\":\r\n        WrapperComponent = TextComponent;\r\n        break;\r\n      case \"carousel\":\r\n        WrapperComponent = CarouselComponent;\r\n        break\r\n      case \"divider\":\r\n        WrapperComponent = DividerComponent;\r\n        break\r\n      case \"accordion\":\r\n        WrapperComponent = AccordionComponent;\r\n        break\r\n      case \"menu\":\r\n        WrapperComponent = MenuComponent;\r\n        break;\r\n      case \"breadcrumbs\":\r\n        WrapperComponent = BreadcrumbsComponent;\r\n        break;\r\n    }\r\n\r\n    return this.props.hideTriggers.includes(hide_on_trigger) ? null : (\r\n      <WrapperComponent\r\n        className={classes}\r\n        ref={this.elementWrapperRef}\r\n        elementId={this.props.element.getId()}\r\n        settings={this.props.element.getSettings()}\r\n        style={styles}\r\n        id={this.CSSId}\r\n      >\r\n        {content}\r\n        {tooltip_text && <AltrpTooltip position={tooltip_position}>{tooltip_text}</AltrpTooltip>}\r\n      </WrapperComponent>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    hideTriggers: state.hideTriggers,\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentScreen: state.currentScreen,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null, null, {\r\n  forwardRef: true\r\n})(withRouter(ElementWrapper));\r\n"],"sourceRoot":""}