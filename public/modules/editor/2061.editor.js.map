{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PageButton.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PaginationComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/Pagination.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js"],"names":["TemplateLoader","this","resource","Resource","route","templatesCache","AltrpModel","templateId","force","update","Number","hasProperty","_","get","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","isArray","forEach","callback","loadTemplate","templateData","JSON","parse","frontElementsFabric","window","templateLoader","PageButton","index","pageIndex","gotoPage","className","onClick","styled","settings","styles","width_count_item","getResponsiveSetting","height_count_item","size","unit","Pagination","nextPage","previousPage","setPageSize","pageCount","pageSize","widgetId","inner_page_count_options","inner_page_type","current_page_text","inner_page_count","next_icon","prev_icon","first_last_buttons_count","middle_buttons_count","posts_pagination_type","is_with_ellipsis","countOptions","React","useMemo","split","map","o","value","label","pageText","replace","generateButtonsArray","item","key","Array","hide_pre_page_button","disabled","dangerouslySetInnerHTML","__html","isString","prev_text","renderAssetIcon","hide_pages_buttons_button","hide_next_page_button","next_text","hide_page_input","type","defaultValue","onChange","e","page","target","hide_pagination_select","AltrpSelect","options","classNamePrefix","find","isSearchable","FrontElementsFabric","object","parent","pageId","models","children","element","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c","ElementWrapperDivComponent","layout_column_width","ElementWrapper","props","updateStore","state","currentModel","appStore","getState","setState","currentUser","currentDataStorage","elementDisplay","getSettings","wrapper","elementWrapperRef","createRef","elementRef","dispatch","addElement","error","errorInfo","isEditor","frontApp","onWidgetMount","isFunction","updateFonts","checkElementDisplay","stylesModule","stylesContainer","current","getElementsByClassName","getId","prevProps","prevState","getName","title","currentTitle","replaceContentWithData","altrpPage","changeCurrentPageProperty","setTitle","updateToken","altrpRandomId","conditions","modelField","conditional_model_field","operator","conditional_other_operator","conditional_other_condition_value","conditionsChecker","getCurrentModel","formsStore","formId","logic","formConditions","display","altrpCompare","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","hide_on_trigger","isFixed","tooltip_text","tooltip_position","classes","getType","getPrefixClasses","data-eltype","style","whiteSpace","toString","componentStack","width","CSSId","getData","ContentComponent","getComponentClass","content","createElement","ref","rootElement","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","getTemplateType","WrapperComponent","GalleryComponent","ImageComponent","ButtonComponent","TextComponent","CarouselComponent","DividerComponent","AccordionComponent","MenuComponent","BreadcrumbsComponent","hideTriggers","includes","elementId","AltrpTooltip","position","Component","connect","forwardRef","withRouter"],"mappings":"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","file":"2061.editor.js","sourcesContent":["import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nclass TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel({});\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n  \r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;","\r\nexport default function PageButton({ index, pageIndex, gotoPage }) {\r\n  return <button\r\n      className={`altrp-pagination-pages__item ${(index === pageIndex) ? 'active' : ''}`}\r\n      onClick={() => gotoPage(index)}\r\n  >\r\n    {index + 1}\r\n  </button>\r\n}","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst PaginationComponent = styled.div`\r\n& .altrp-pagination-pages__item{\r\n${({settings}) => {\r\n  let styles = '';\r\n  const width_count_item = getResponsiveSetting(settings, 'width_count_item');\r\n  const height_count_item = getResponsiveSetting(settings, 'height_count_item');\r\n  if (!width_count_item) {\r\n    styles += `width: 35px;`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  } else if(width_count_item.size && width_count_item.unit){\r\n    styles += `width: ${width_count_item.size}${width_count_item.unit};`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  }\r\n  if (! height_count_item) {\r\n    styles += `height: 35px;`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  } else if(height_count_item.size && height_count_item.unit){\r\n    styles += `height: ${height_count_item.size}${height_count_item.unit};`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  }\r\n  return styles;\r\n}}\r\n}\r\n`;\r\n\r\nexport default PaginationComponent;","import {generateButtonsArray, renderAssetIcon} from \"../../../../../../front-app/src/js/helpers\";\r\nimport PageButton from \"./PageButton\";\r\nimport AltrpSelect from \"../../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\n\r\n/**\r\n *\r\n * @param {{}}settings\r\n * @param {function} nextPage\r\n * @param {function} previousPage\r\n * @param {function} setPageSize\r\n * @param {function} gotoPage\r\n * @param {int} pageIndex\r\n * @param {int} pageCount\r\n * @param {int} pageSize\r\n * @param {string} widgetId\r\n * @return {*}\r\n */\r\nexport default function Pagination(\r\n    {\r\n      settings,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n      pageIndex,\r\n      pageCount,\r\n      pageSize,\r\n      widgetId,\r\n      gotoPage,\r\n    }) {\r\n  const {\r\n    inner_page_count_options,\r\n    inner_page_type,\r\n    current_page_text,\r\n    inner_page_count,\r\n    next_icon, prev_icon,\r\n    first_last_buttons_count,\r\n    middle_buttons_count,\r\n    posts_pagination_type ,\r\n    is_with_ellipsis\r\n  } = settings;\r\n  let countOptions =\r\n      React.useMemo(() => {\r\n        let countOptions = null;\r\n        if (inner_page_count_options) {\r\n          countOptions = inner_page_count_options.split('\\n');\r\n          countOptions = countOptions.map(o => ({ value: Number(o), label: Number(o) }));\r\n        }\r\n        return countOptions\r\n      }, [inner_page_count_options]);\r\n\r\n  const pageText = React.useMemo(() => {\r\n    let pageText = current_page_text || 'Current Page: {{page}}';\r\n    pageText = pageText.replace('{{page}}', pageIndex + 1).replace('{{page_count}}', pageCount);\r\n    if (inner_page_type === 'pages' || posts_pagination_type === 'pages') {\r\n      // let paginatePageCount = Number(inner_page_count) || pageCount;\r\n      // if (paginatePageCount <= 0 || paginatePageCount > pageCount) {\r\n      //   paginatePageCount = pageCount;\r\n      // }\r\n      // let array = [];\r\n      // for (let i = 0; i < paginatePageCount; i++) {\r\n      //   array.push(i);\r\n      // }\r\n      // let startIndex = (paginatePageCount === pageCount) ? 1 : (pageIndex + 1) - Math.floor(paginatePageCount / 2);\r\n      // if (startIndex <= 0) {\r\n      //   startIndex = 1;\r\n      // }\r\n      // if (startIndex + paginatePageCount > pageCount) {\r\n      //   startIndex = pageCount - paginatePageCount + 1;\r\n      // }\r\n      // pageText = <div className=\"altrp-pagination-pages\">{array.map((i, idx) => {\r\n      //   idx += startIndex;\r\n      //   return <button className={`altrp-pagination-pages__item ${(idx - 1 === pageIndex) ? 'active' : ''}`}\r\n      //     key={idx}\r\n      //     onClick={() => {\r\n      //       gotoPage(idx - 1);\r\n      //     }}>\r\n      //     {idx}\r\n      //   </button>\r\n\r\n      // })}</div>\r\n      return <div className=\"altrp-pagination-pages\">\r\n        {(pageCount > first_last_buttons_count * 2 + middle_buttons_count)\r\n        && first_last_buttons_count && middle_buttons_count\r\n            ? generateButtonsArray(pageIndex, pageCount, first_last_buttons_count, middle_buttons_count)\r\n                .map((item, index) => item === \"ellipsis\"\r\n                    ? is_with_ellipsis ? <div key={item + index} className=\"altrp-pagination__ellipsis\">...</div> : <span>&nbsp;</span>\r\n                    : <PageButton key={item} index={item} pageIndex={pageIndex} gotoPage={gotoPage} />)\r\n            : [...Array(pageCount)].map((_, index) => <PageButton key={index} index={index} pageIndex={pageIndex} gotoPage={gotoPage} />)}\r\n      </div>\r\n    }\r\n    return pageText;\r\n  }, [current_page_text, pageIndex, pageCount, inner_page_type, inner_page_count, settings]);\r\n  if(inner_page_type === 'none'){\r\n    return null;\r\n  }\r\n  return <PaginationComponent className=\"altrp-pagination\" settings={settings}>\r\n    {!settings.hide_pre_page_button && <button className={\"altrp-pagination__previous\"}\r\n                                               onClick={() => {\r\n                                                 previousPage();\r\n                                               }}\r\n                                               disabled={pageIndex === 0}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.prev_text) ? settings.prev_text : 'Previous Page' }} />\r\n      {renderAssetIcon(prev_icon)}\r\n    </button>}\r\n    {!settings.hide_pages_buttons_button && <div className=\"altrp-pagination__count\">\r\n      {pageText}\r\n    </div>}\r\n    {!settings.hide_next_page_button && <button className=\"altrp-pagination__next\"\r\n                                                onClick={() => {\r\n                                                  nextPage()\r\n                                                }}\r\n                                                disabled={pageCount === pageIndex + 1}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.next_text) ? settings.next_text : 'Next Page' }} />\r\n      {renderAssetIcon(next_icon)}\r\n    </button>}\r\n    {! settings.hide_page_input &&\r\n    <input className=\"altrp-pagination__goto-page\"\r\n           type=\"number\"\r\n           defaultValue={pageIndex + 1}\r\n           onChange={(e) => {\r\n             const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n             gotoPage(page)\r\n           }} />}\r\n    {! settings.hide_pagination_select && countOptions &&\r\n    <AltrpSelect className=\"altrp-pagination__select-size\"\r\n      options={countOptions}\r\n      classNamePrefix={widgetId + ' altrp-field-select2'}\r\n      value={countOptions.find(o => o.value === pageSize)}\r\n      isSearchable={false}\r\n      onChange={value => {\r\n        setPageSize(value.value)\r\n      }} />}\r\n\r\n  </PaginationComponent>\r\n}\r\n","import FrontElement from \"./FrontElement\";\r\n\r\nclass FrontElementsFabric {\r\n  /**\r\n   * парсим данные шаблона\r\n   * @param {object} object\r\n   * @param {FrontElement | null} parent\r\n   * @param {int | null} pageId\r\n   * @param {array | null} models\r\n   * @return {FrontElement}\r\n   */\r\n  parseData(object, parent, pageId, models){\r\n    let children = [];\r\n    /**\r\n     * @member {FrontElement} element\r\n     * */\r\n    let element = new FrontElement(object);\r\n    if(pageId){\r\n      element.addModelInfo({\r\n        modelName: 'page',\r\n        modelId: pageId,\r\n      });\r\n    }\r\n    if(_.isArray(models)){\r\n      for(let model of models){\r\n        element.addModelInfo({\r\n            ...model,\r\n        });\r\n      }\r\n    }\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        window.frontElementsManager.checkElementExists(child.name) ?\r\n            children.push( this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.lastElement = object.lastElement;\r\n    element.children = children;\r\n    element.settings = object.settings;\r\n    element.name = object.name;\r\n    element.type = object.type;\r\n    element.dynamicContentSettings = object.dynamicContentSettings;\r\n    if(parent){\r\n      element.setParent(parent);\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Правильное клонирование элемента\r\n   * @params {FrontElement} element\r\n   * @return {FrontElement | null}\r\n   */\r\n  cloneElement(element){\r\n    if(! element){\r\n      return null;\r\n    }\r\n    let clonedElement = _.cloneDeep(element);\r\n    // console.log(element.idForAction);\r\n    this.updateParents(clonedElement);\r\n    return clonedElement\r\n  }\r\n\r\n  /**\r\n   * Обновляет ссылку на родителя у элементов\r\n   * @params {FrontElement} element\r\n   */\r\n\r\n  updateParents(element){\r\n    if(_.isArray(element.children)){\r\n      element.children.forEach(c=>{\r\n        c.setParent(element);\r\n        this.updateParents(c);\r\n        // console.log(c);\r\n      });\r\n    }\r\n  }\r\n}\r\nwindow.frontElementsFabric = new FrontElementsFabric();\r\nexport default window.frontElementsFabric;\r\n","import styled from 'styled-components';\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;","\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { altrpCompare, altrpRandomId, conditionsChecker, isEditor, replaceContentWithData, setTitle } from \"../helpers\";\r\nimport { addElement } from \"../store/elements-storage/actions\";\r\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\r\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\r\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\r\nimport ImageComponent from \"../../../../editor/src/js/components/widgets/styled-components/ImageComponent\";\r\nimport CarouselComponent from \"../../../../editor/src/js/components/widgets/styled-components/CarouselComponent\";\r\nimport GalleryComponent from \"../../../../editor/src/js/components/widgets/styled-components/GalleryComponent\";\r\nimport ButtonComponent from \"../../../../editor/src/js/components/widgets/styled-components/ButtonComponent\";\r\nimport DividerComponent from \"../../../../editor/src/js/components/widgets/styled-components/DividerComponent\";\r\nimport AccordionComponent from \"../../../../editor/src/js/components/widgets/styled-components/AccordionComponent\";\r\nimport TextComponent from \"../../../../editor/src/js/components/widgets/styled-components/TextComponent\";\r\nimport MenuComponent from \"../../../../editor/src/js/components/widgets/styled-components/MenuComponent\";\r\nimport BreadcrumbsComponent from \"../../../../editor/src/js/components/widgets/styled-components/BreadcrumbsComponent\";\r\n\r\nclass ElementWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\r\n    };\r\n    props.element.wrapper = this;\r\n    this.elementWrapperRef = React.createRef();\r\n    this.elementRef = React.createRef();\r\n    appStore.dispatch(addElement(this));\r\n  }\r\n\r\n  /**\r\n   * Отлавливаем ошибки\r\n   * @param error\r\n   * @param errorInfo\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      error: error,\r\n      errorInfo: errorInfo\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Иногда надо обновить элемент (FrontElement)\r\n   */\r\n  componentDidMount() {\r\n    ! isEditor() && window.frontApp.onWidgetMount();\r\n    if (_.isFunction(this.props.element.update)) {\r\n      this.props.element.update();\r\n      this.props.element.updateFonts();\r\n    }\r\n    this.checkElementDisplay();\r\n  }\r\n  /**\r\n   * Подписываемся на обновление store редакса\r\n   */\r\n  updateStore = () => {\r\n    if (this.state.currentModel !== appStore.getState().currentModel) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentModel\r\n      }));\r\n    }\r\n    /**\r\n     * Обновляем пользователя\r\n     */\r\n    if (this.state.currentUser !== appStore.getState().currentUser) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentModel: appStore.getState().currentUser\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Обновляем currentDataStorage\r\n     */\r\n    if (\r\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\r\n    ) {\r\n      this.setState(state => ({\r\n        ...state,\r\n        currentDataStorage: appStore.getState().currentDataStorage\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\r\n   * @return {null | HTMLElement}\r\n   */\r\n  getStylesHTMLElement() {\r\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\r\n        `altrp-styles${this.props.element.getId()}`\r\n      )[0] || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Нужно ли обновить отображение обертки элементов\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkElementDisplay();\r\n    if (appStore.getState().currentModel.getProperty('altrpModelUpdated') &&\r\n      appStore.getState().currentDataStorage.getProperty('currentDataStorageLoaded') &&\r\n      !isEditor() &&\r\n      this.props.element.getName() === 'section') {\r\n      let title = appStore.getState().currentTitle;\r\n      title = replaceContentWithData(title);\r\n      if (appStore.getState().altrpPage.getProperty('title') !== title) {\r\n        appStore.dispatch(changeCurrentPageProperty('title', title));\r\n      }\r\n      setTitle(title);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновить элемент изменив this.state.updateToken\r\n   */\r\n  updateElement() {\r\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }))\r\n  }\r\n\r\n  /**\r\n   * Проверка видимости элемента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  checkElementDisplay(prevProps, prevState) {\r\n    /**\r\n     * @member {FrontElement} element\r\n     */\r\n    const { element } = this.props;\r\n    if (!element.getSettings(\"conditional_other\")) {\r\n      return;\r\n    }\r\n    let conditions = element.getSettings(\"conditions\", []);\r\n    conditions = conditions.map(c => {\r\n      const {\r\n        conditional_model_field: modelField,\r\n        conditional_other_operator: operator,\r\n        conditional_other_condition_value: value\r\n      } = c;\r\n      return {\r\n        modelField,\r\n        operator,\r\n        value\r\n      };\r\n    });\r\n    let elementDisplay = conditionsChecker(\r\n      conditions,\r\n      element.getSettings(\"conditional_other_display\") === \"AND\",\r\n      this.props.element.getCurrentModel(),\r\n      true\r\n    );\r\n\r\n    if (this.state.elementDisplay === elementDisplay) {\r\n      return;\r\n    }\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Переключает видимость элемента\r\n   */\r\n  toggleElementDisplay() {\r\n    this.setState(state => ({\r\n      ...state,\r\n      elementDisplay: !state.elementDisplay\r\n    }));\r\n  }\r\n  /**\r\n   * Метод для проверки видимости поля формы\r\n   * @return {boolean}\r\n   */\r\n  inputIsDisplay() {\r\n    const { formsStore } = this.state;\r\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\r\n    const logic = this.props.element.getSettings(\r\n      \"form_condition_display_on\",\r\n      \"AND\"\r\n    );\r\n    const formConditions = this.props.element.getSettings(\r\n      \"form_conditions\",\r\n      []\r\n    );\r\n    let display = true;\r\n    formConditions.forEach(c => {\r\n      if (logic === \"AND\") {\r\n        display *= altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      } else {\r\n        display += altrpCompare(\r\n          _.get(formsStore, `${formId}.${c.field_id}`),\r\n          c.value,\r\n          c.operator\r\n        );\r\n      }\r\n    });\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hide_on_wide_screen,\r\n      hide_on_desktop,\r\n      hide_on_laptop,\r\n      hide_on_tablet,\r\n      hide_on_big_phone,\r\n      hide_on_small_phone,\r\n      hide_on_trigger,\r\n      isFixed,\r\n      tooltip_text,\r\n      tooltip_position\r\n    } = this.props.element.settings;\r\n    let classes = `altrp-element altrp-element${this.props.element.getId()} altrp-element_${this.props.element.getType()}`;\r\n    classes += this.props.element.getPrefixClasses() + \" \";\r\n    if (this.props.element.getType() === \"widget\") {\r\n      classes += ` altrp-widget_${this.props.element.getName()}`;\r\n    }\r\n    if (hide_on_wide_screen) {\r\n      classes += \" hide_on_wide_screen\";\r\n    }\r\n    if (hide_on_desktop) {\r\n      classes += \" hide_on_desktop\";\r\n    }\r\n    if (hide_on_laptop) {\r\n      classes += \" hide_on_laptop\";\r\n    }\r\n    if (hide_on_tablet) {\r\n      classes += \" hide_on_tablet\";\r\n    }\r\n    if (hide_on_big_phone) {\r\n      classes += \" hide_on_big_phone\";\r\n    }\r\n    if (hide_on_small_phone) {\r\n      classes += \" hide_on_small_phone\";\r\n    }\r\n    if (isFixed) {\r\n      classes += \" fixed-section\";\r\n    }\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <div className=\"altrp-error\" data-eltype={this.props.element.getType()}>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    const styles = {};\r\n\r\n    if (this.props.element.getResponsiveSetting('layout_column_width')) {\r\n      if (Number(this.props.element.getResponsiveSetting('layout_column_width'))) {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width') + '%';\r\n      } else {\r\n        styles.width = this.props.element.getResponsiveSetting('layout_column_width');\r\n      }\r\n    }\r\n    if (!this.state.elementDisplay) {\r\n      styles.display = \"none\";\r\n    }\r\n    let CSSId = this.props.element.getSettings(\"advanced_element_id\", \"\");\r\n    CSSId = replaceContentWithData(CSSId, this.props.element.getCurrentModel().getData());\r\n    if (this.CSSId !== CSSId) {\r\n      this.CSSId = CSSId;\r\n    }\r\n    let ContentComponent = frontElementsManager.getComponentClass(this.props.element.getName());\r\n    const content = React.createElement(ContentComponent, {\r\n      ref: this.elementRef,\r\n      rootElement: this.props.rootElement,\r\n      ElementWrapper: this.props.ElementWrapper,\r\n      element: this.props.element,\r\n      children: this.props.element.getChildren(),\r\n      match: this.props.match,\r\n      currentModel: this.props.currentModel,\r\n      currentUser: this.props.currentUser,\r\n      currentDataStorage: this.props.currentDataStorage,\r\n      altrpresponses: this.props.altrpresponses,\r\n      formsStore: this.props.formsStore,\r\n      elementDisplay: this.state.elementDisplay,\r\n      altrpPageState: this.props.altrpPageState,\r\n      altrpMeta: this.props.altrpMeta,\r\n      updateToken: this.state.updateToken,\r\n      currentScreen: this.props.currentScreen,\r\n      baseRender: this.props.baseRender,\r\n      history: this.props.history,\r\n      appStore\r\n    });\r\n    if (this.props.element.getTemplateType() === 'email') {\r\n      if (!this.state.elementDisplay) {\r\n        return null;\r\n      }\r\n      return <>\r\n        {content}\r\n      </>\r\n    }\r\n\r\n    let WrapperComponent = ElementWrapperDivComponent;\r\n\r\n    switch (this.props.element.getName()) {\r\n      case \"gallery\":\r\n        WrapperComponent = GalleryComponent;\r\n        break\r\n      case \"image\":\r\n        WrapperComponent = ImageComponent;\r\n        break\r\n      case \"button\":\r\n        WrapperComponent = ButtonComponent;\r\n        break\r\n      case \"text\":\r\n        WrapperComponent = TextComponent;\r\n        break;\r\n      case \"carousel\":\r\n        WrapperComponent = CarouselComponent;\r\n        break\r\n      case \"divider\":\r\n        WrapperComponent = DividerComponent;\r\n        break\r\n      case \"accordion\":\r\n        WrapperComponent = AccordionComponent;\r\n        break\r\n      case \"menu\":\r\n        WrapperComponent = MenuComponent;\r\n        break;\r\n      case \"breadcrumbs\":\r\n        WrapperComponent = BreadcrumbsComponent;\r\n        break;\r\n    }\r\n\r\n    return this.props.hideTriggers.includes(hide_on_trigger) ? null : (\r\n      <WrapperComponent\r\n        className={classes}\r\n        ref={this.elementWrapperRef}\r\n        elementId={this.props.element.getId()}\r\n        settings={this.props.element.getSettings()}\r\n        style={styles}\r\n        id={this.CSSId}\r\n      >\r\n        {content}\r\n        {tooltip_text && <AltrpTooltip position={tooltip_position}>{tooltip_text}</AltrpTooltip>}\r\n      </WrapperComponent>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    hideTriggers: state.hideTriggers,\r\n    altrpresponses: state.altrpresponses,\r\n    formsStore: state.formsStore,\r\n    currentDataStorage: state.currentDataStorage,\r\n    currentModel: state.currentModel,\r\n    currentUser: state.currentUser,\r\n    altrpMeta: state.altrpMeta,\r\n    altrpPageState: state.altrpPageState,\r\n    currentScreen: state.currentScreen,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null, null, {\r\n  forwardRef: true\r\n})(withRouter(ElementWrapper));\r\n"],"sourceRoot":""}