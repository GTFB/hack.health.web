{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/AltrpAction.js","webpack:///./resources/modules/front-app/src/js/classes/modules/ActionsManager.js","webpack:///./resources/modules/front-app/src/js/helpers/plugins.js","webpack:///./resources/modules/front-app/src/js/helpers/sendEmail.js"],"names":["AltrpAction","data","widgetId","element","setProperty","init","this","getProperty","getId","formId","indexOf","replaceContentWithData","getCurrentModel","getData","formURL","getComponentByElementId","getElementId","getElement","name","defaultValue","value","_","isString","getType","getFormURL","form","formsManager","registerForm","getFormId","type","result","success","confirmText","confirm","message","doActionForm","doActionDelay","doActionEmail","doActionRedirect","doActionToggleElements","doActionTogglePopup","doActionPrintPage","doActionPrintElements","doActionScrollToElement","doActionScrollToTop","doActionScrollToBottom","doActionTrigger","doActionPageToPDF","doActionElementsToPDF","doActionDataToCSV","doActionTableToCSV","doActionTableToXLS","doActionLogin","doActionLogout","doActionSetData","doActionUpdateCurrentDatasources","doActionFormsManipulate","doActionCustomCode","doActionPlaySound","doActionCondition","doActionVIToggle","alertText","alert","customHeaders","parseParamsFromString","getAppContext","isArray","getDataByPath","get","bulk","customRoute","assign","bulkRequests","map","item","idx","url","submit","Promise","all","console","error","forEach","deleteFormById","_data","isEmpty","formOptions","dynamicURL","response","log","URL","frontAppRouter","history","goBack","window","location","push","IDs","split","id","component","toggleElementDisplay","appStore","dispatch","togglePopup","print","elementsToPrint","elementId","trim","getHTMLElementById","getStylesHTMLElement","stylesElement","document","head","printElements","scroller","mainScrollbars","querySelector","scrollToElement","scrollTop","routeContent","getElementById","offsetHeight","filename","elements","elementsToPdf","dataToCSV","dataFromTable","table","formattedData","each","row","Object","values","templateName","rawTemplateData","parsedTemplateData","reduce","keyValuePair","dataArray","dataToXLS","blob","link","createElement","setAttribute","createObjectURL","body","appendChild","click","removeChild","fields","field","fieldValidate","altrpLogin","altrpLogout","paths","path","setType","count","setDataByPath","length","replace","currentValue","v","nextIndex","isNaN","Number","isObject","i","listPath","list","filter","_item","change","elementRef","current","selectAll","clearValue","code","eval","aliases","alias","allDataSources","dataStorageUpdater","dataSourcesToUpdate","dataSource","updateCurrent","action","isFunction","fireAction","templateGUID","res","sendEmail","getReplacedProperty","delay","duration","loop","playSound","compare","conditionLeft","conditionRight","altrpCompare","loadVIPlugin","getWrapperHTMLElementByElement","AltrpModel","ActionsManager","actions","eventName","a","unsetProperty","preventedActions","isEditor","errors","registerWidgetActions","doAction","actionsManager","vIOn","getElementsByClassName","classList","add","$","bvi","bvi_target","remove","loadJQuery","bVIStyles","style","css","styleSheet","cssText","createTextNode","bVIScript","promise","rej","resolve","reject","scriptsLoaded","loadChecker","onload","onerror","jQueryScript","emailTemplateGUID","subject","from","to","attachments","templateLoader","loadTemplate","template","changeCurrentEmailTemplate","html","emailTemplatesRenderer","emailTemplate","cloneNode","display","outerHTML","resource","Resource","route","post"],"mappings":"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","file":"2167.editor.js","sourcesContent":["import AltrpModel from '../../../../editor/src/js/classes/AltrpModel';\r\n\r\nimport {\r\n  altrpLogin,\r\n  altrpLogout,\r\n  dataFromTable,\r\n  dataToCSV,\r\n  elementsToPdf,\r\n  getAppContext,\r\n  getComponentByElementId,\r\n  getHTMLElementById,\r\n  parseParamsFromString,\r\n  getDataByPath,\r\n  printElements,\r\n  replaceContentWithData,\r\n  scrollToElement,\r\n  setDataByPath,\r\n  dataToXLS,\r\n  delay,\r\n  altrpCompare,\r\n  getWrapperHTMLElementByElement\r\n} from '../helpers';\r\nimport { togglePopup } from '../store/popup-trigger/actions';\r\nimport { sendEmail } from '../helpers/sendEmail';\r\nimport { loadVIPlugin } from '../helpers/plugins';\r\n\r\n// let  history = require('history');\r\n// // import {history} from 'history';\r\n// console.log(history.history);\r\n/**\r\n * Класс представляющий действия на странице\r\n * @link https://docs.google.com/document/d/1v8Hm1DLkqqwzBeISd8-UvgTqscVxQPtBUtKqBrH1HaU/edit#\r\n * @class AltrpAction\r\n */\r\nclass AltrpAction extends AltrpModel {\r\n  constructor(data, widgetId, element) {\r\n    super(data);\r\n    this.setProperty('_widgetId', widgetId);\r\n    this.setProperty('_element', element);\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Получить id элемента\r\n   * @return {string}\r\n   */\r\n  getElementId() {\r\n    return this.getProperty('_element').getId();\r\n  }\r\n\r\n  /**\r\n   * Получить id для регистрации формы\r\n   * @return {string}\r\n   */\r\n  getFormId() {\r\n    let formId = this.getProperty('form_id');\r\n    if (!formId) {\r\n      return formId;\r\n    }\r\n    if (formId.indexOf('{{') !== -1) {\r\n      formId = replaceContentWithData(formId, this.getCurrentModel().getData());\r\n    }\r\n    return formId;\r\n  }\r\n\r\n  /**\r\n   * Получить URL формы\r\n   * @return {string}\r\n   */\r\n  getFormURL() {\r\n    let formURL = this.getProperty('form_url');\r\n    if (!formURL) {\r\n      return formURL;\r\n    }\r\n    if (formURL.indexOf('{{') !== -1) {\r\n      formURL = replaceContentWithData(\r\n        formURL,\r\n        this.getCurrentModel().getData()\r\n      );\r\n    }\r\n    return formURL;\r\n  }\r\n\r\n  /**\r\n   * Получить компонент обертки для элемента\r\n   * @return {{}}\r\n   */\r\n  getWrapperComponent() {\r\n    return getComponentByElementId(this.getElementId());\r\n  }\r\n\r\n  /**\r\n   * Получить экземпляр элемента\r\n   * @return {FrontElement | null}\r\n   */\r\n  getElement() {\r\n    return this.getProperty('_element');\r\n  }\r\n  /**\r\n   * Получить экземпляр текущей модели страницы или карточки\r\n   * @return {AltrpModel | null}\r\n   */\r\n  getCurrentModel() {\r\n    const element = this.getElement();\r\n    return element.getCurrentModel();\r\n  }\r\n\r\n  /**\r\n   * Возврашает значение свойства name, если свойство строка, то производит подстановку значений из данных\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getReplacedProperty(name, defaultValue = '') {\r\n    let value = this.getProperty(name, defaultValue);\r\n    if (_.isString(value)) {\r\n      value = replaceContentWithData(value, this.getCurrentModel().getData());\r\n    }\r\n    return value;\r\n  }\r\n  /**\r\n   * Инициируем действие\r\n   */\r\n  async init() {\r\n    switch (this.getType()) {\r\n      case 'form': {\r\n        if (!this.getFormURL()) {\r\n          this.setProperty('_form', null);\r\n          return;\r\n        }\r\n        // const formsManager = (\r\n        //   await import(\r\n        //     '../../../../editor/src/js/classes/modules/FormsManager.js'\r\n        //   )\r\n        // ).default;\r\n        // const formOptions = {\r\n        //   dynamicURL: true,\r\n        //   customRoute: this.getFormURL()\r\n        // };\r\n\r\n        // const form = formsManager.registerForm(\r\n        //   this.getFormId(),\r\n        //   '',\r\n        //   this.getProperty('form_method'),\r\n        //   formOptions\r\n        // );\r\n        // this.setProperty('_form', form);\r\n        return;\r\n      }\r\n      case 'login': {\r\n        const form = formsManager.registerForm(\r\n          this.getFormId(),\r\n          'login',\r\n          'POST'\r\n        );\r\n        this.setProperty('_form', form);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Получить тип действия\r\n   * @return {string}\r\n   */\r\n  getType() {\r\n    return this.getProperty('type');\r\n  }\r\n  /**\r\n   * Получить тип действия\r\n   * @return {*}\r\n   */\r\n  setType(type) {\r\n    return this.setProperty('type', type);\r\n  }\r\n\r\n  /**\r\n   * Оссинхронно выполняет действие\r\n   * @return {Promise<void>}\r\n   */\r\n  async doAction() {\r\n    let result = {\r\n      success: false\r\n    };\r\n    let confirmText = this.getProperty('confirm');\r\n    if (confirmText && !confirm(confirmText)) {\r\n      return {\r\n        success: false,\r\n        message: 'User not Confirm'\r\n      };\r\n    }\r\n    switch (this.getType()) {\r\n      case 'form':\r\n        {\r\n          result = await this.doActionForm();\r\n        }\r\n        break;\r\n      case 'delay':\r\n        {\r\n          result = await this.doActionDelay();\r\n        }\r\n        break;\r\n      case 'email':\r\n        {\r\n          result = await this.doActionEmail();\r\n        }\r\n        break;\r\n      case 'redirect':\r\n        {\r\n          result = await this.doActionRedirect();\r\n        }\r\n        break;\r\n      case 'toggle_element':\r\n        {\r\n          result = await this.doActionToggleElements();\r\n        }\r\n        break;\r\n      case 'toggle_popup':\r\n        {\r\n          result = await this.doActionTogglePopup();\r\n        }\r\n        break;\r\n      case 'print_page':\r\n        {\r\n          result = await this.doActionPrintPage();\r\n        }\r\n        break;\r\n      case 'print_elements':\r\n        {\r\n          result = await this.doActionPrintElements();\r\n        }\r\n        break;\r\n      case 'scroll_to_element':\r\n        {\r\n          result = await this.doActionScrollToElement();\r\n        }\r\n        break;\r\n      case 'scroll_to_top':\r\n        {\r\n          result = await this.doActionScrollToTop();\r\n        }\r\n        break;\r\n      case 'scroll_to_bottom':\r\n        {\r\n          result = await this.doActionScrollToBottom();\r\n        }\r\n        break;\r\n      case 'trigger':\r\n        {\r\n          result = await this.doActionTrigger();\r\n        }\r\n        break;\r\n      case 'page_to_pdf':\r\n        {\r\n          result = await this.doActionPageToPDF();\r\n        }\r\n        break;\r\n      case 'elements_to_pdf':\r\n        {\r\n          result = await this.doActionElementsToPDF();\r\n        }\r\n        break;\r\n      case 'data_to_csv':\r\n        {\r\n          result = await this.doActionDataToCSV();\r\n        }\r\n        break;\r\n      case 'table_to_csv':\r\n        {\r\n          result = await this.doActionTableToCSV();\r\n        }\r\n        break;\r\n      case 'table_to_xls':\r\n        result = await this.doActionTableToXLS();\r\n        break;\r\n      case 'login':\r\n        {\r\n          result = await this.doActionLogin();\r\n        }\r\n        break;\r\n      case 'logout':\r\n        {\r\n          result = await this.doActionLogout();\r\n        }\r\n        break;\r\n      case 'set_data':\r\n        {\r\n          result = await this.doActionSetData();\r\n        }\r\n        break;\r\n      case 'update_current_datasources':\r\n        {\r\n          result = await this.doActionUpdateCurrentDatasources();\r\n        }\r\n        break;\r\n      case 'forms_manipulate':\r\n        {\r\n          result = await this.doActionFormsManipulate();\r\n        }\r\n        break;\r\n      case 'custom_code':\r\n        {\r\n          result = await this.doActionCustomCode();\r\n        }\r\n        break;\r\n      case 'play_sound':\r\n        {\r\n          result = await this.doActionPlaySound();\r\n        }\r\n        break;\r\n      case 'condition':\r\n        {\r\n          result = await this.doActionCondition();\r\n        }\r\n        break;\r\n      case 'vi_toggle':\r\n        {\r\n          result = await this.doActionVIToggle();\r\n        }\r\n        break;\r\n    }\r\n    let alertText = '';\r\n    if (result.success) {\r\n      alertText = this.getProperty('alert');\r\n    } else {\r\n      alertText = this.getProperty('reject');\r\n    }\r\n    if (alertText) {\r\n      alertText = replaceContentWithData(alertText);\r\n      alert(alertText);\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * Ассинхронно выполняет действие-формы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionForm() {\r\n    // if (! this.getProperty('_form')) {\r\n    //   return {\r\n    //     success: false,\r\n    //     message: 'Нет Формы'\r\n    //   };\r\n    // }\r\n    const formsManager = (\r\n      await import('../../../../editor/src/js/classes/modules/FormsManager.js')\r\n    ).default;\r\n\r\n    let data = null;\r\n    let customHeaders = null;\r\n    if (this.getProperty('custom_headers')) {\r\n      customHeaders = parseParamsFromString(\r\n        this.getProperty('custom_headers'),\r\n        this.getCurrentModel()\r\n      );\r\n    }\r\n    if (this.getProperty('data')) {\r\n      data = parseParamsFromString(\r\n        this.getProperty('data'),\r\n        getAppContext(this.getCurrentModel()),\r\n        true\r\n      );\r\n      // if (!_.isEmpty(data)) {\r\n      //   return form.submit('', '', data);\r\n      // }\r\n      // return { success: true };\r\n    }\r\n    if (this.getProperty('forms_bulk')) {\r\n      if (\r\n        _.isArray(getDataByPath(this.getProperty('bulk_path'))) &&\r\n        _.get(getDataByPath(this.getProperty('bulk_path')), 'length')\r\n      ) {\r\n        let bulk = getDataByPath(this.getProperty('bulk_path'));\r\n        /**\r\n         * Для получение данных с полей формы, нужно создать форму и вызвать метод getData\r\n         * @type {AltrpForm}\r\n         */\r\n        const form = formsManager.registerForm(\r\n          this.getFormId(),\r\n          '',\r\n          this.getProperty('form_method'),\r\n          {\r\n            customRoute: ''\r\n          }\r\n        );\r\n        data = _.assign(form.getData(), data);\r\n        let bulkRequests = bulk.map(async (item, idx) => {\r\n          if (this.getProperty('data')) {\r\n            data = parseParamsFromString(\r\n              this.getProperty('data'),\r\n              getAppContext(item),\r\n              true\r\n            );\r\n          }\r\n          let url = this.getProperty('form_url');\r\n          url = replaceContentWithData(url, item);\r\n          const form = formsManager.registerForm(\r\n            this.getFormId() + idx,\r\n            '',\r\n            this.getProperty('form_method'),\r\n            {\r\n              customRoute: url\r\n            }\r\n          );\r\n          return await form.submit('', '', data, customHeaders);\r\n        });\r\n        try {\r\n          let res = await Promise.all(bulkRequests);\r\n        } catch (error) {\r\n          console.error(error);\r\n          bulk.forEach((item, idx) => {\r\n            formsManager.deleteFormById(this.getFormId() + idx);\r\n          });\r\n          return { success: false };\r\n        }\r\n        bulk.forEach((item, idx) => {\r\n          formsManager.deleteFormById(this.getFormId() + idx);\r\n        });\r\n      }\r\n\r\n      return { success: true };\r\n    }\r\n    if (this.getProperty('path')) {\r\n      let _data = getDataByPath(this.getProperty('path'), {});\r\n      if (!_.isEmpty(_data)) {\r\n        data = _.assign(_data, data);\r\n      }\r\n    }\r\n    /**\r\n     *\r\n     * @type {AltrpForm}\r\n     */\r\n    // let form = this.getProperty('_form');\r\n    if (!this.getFormURL()) {\r\n      this.setProperty('_form', null);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    const formOptions = {\r\n      dynamicURL: true,\r\n      customRoute: this.getFormURL()\r\n    };\r\n    const form = formsManager.registerForm(\r\n      this.getFormId(),\r\n      '',\r\n      this.getProperty('form_method'),\r\n      formOptions\r\n    );\r\n    let result = {\r\n      success: true\r\n    };\r\n    try {\r\n      const response = await form.submit('', '', data, customHeaders);\r\n      result = _.assign(result, response);\r\n    } catch (error) {\r\n      console.log(error);\r\n      result.error = error;\r\n      result.success = false;\r\n    }\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * Делает редирект на страницу form_url\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionRedirect() {\r\n    let URL = this.getFormURL();\r\n    if (frontAppRouter) {\r\n      if (this.getProperty('back')) {\r\n        frontAppRouter.history.goBack();\r\n      } else {\r\n        let innerRedirect = !this.getProperty('outer');\r\n        if (innerRedirect) {\r\n          frontAppRouter.history.push(URL);\r\n        } else {\r\n          window.location.assign(URL);\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Показывает/скрывает элементы по пользовательским ИД\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionToggleElements() {\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return { success: true };\r\n    }\r\n    IDs = IDs.split(',');\r\n\r\n    IDs.forEach(id => {\r\n      let component = getComponentByElementId(id);\r\n      if (!component && !component.toggleElementDisplay) {\r\n        return;\r\n      }\r\n      component.toggleElementDisplay();\r\n    });\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Показывает/скрывает попап\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTogglePopup() {\r\n    let id = this.getProperty('popup_id');\r\n    if (!id) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    appStore.dispatch(togglePopup(id));\r\n\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Печать страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPrintPage() {\r\n    window.print();\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Печать элементов\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPrintElements() {\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return { success: true };\r\n    }\r\n    IDs = IDs.split(',');\r\n    let elementsToPrint = [];\r\n    IDs.forEach(elementId => {\r\n      if (!elementId || !elementId.trim()) {\r\n        return;\r\n      }\r\n      getHTMLElementById(elementId.trim()) &&\r\n        elementsToPrint.push(getHTMLElementById(elementId));\r\n      if (getComponentByElementId(elementId.trim())?.getStylesHTMLElement) {\r\n        let stylesElement = getComponentByElementId(\r\n          elementId.trim()\r\n        ).getStylesHTMLElement();\r\n        if (stylesElement) {\r\n          elementsToPrint.push(stylesElement);\r\n        }\r\n      }\r\n    });\r\n    if (_.get(window, 'stylesModule.stylesContainer.current')) {\r\n      elementsToPrint.push(\r\n        _.get(window, 'stylesModule.stylesContainer.current')\r\n      );\r\n    }\r\n    elementsToPrint.push(document.head);\r\n    printElements(elementsToPrint);\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Скролл к элементу\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToElement() {\r\n    let elementId = this.getProperty('element_id');\r\n    if (!elementId) {\r\n      return { success: true };\r\n    }\r\n    elementId = elementId.trim();\r\n    const element = getHTMLElementById(elementId);\r\n    let scroller = mainScrollbars;\r\n    if(! scroller){\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if (element) {\r\n      scrollToElement(scroller, element);\r\n    }\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Скролл на верх страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToTop() {\r\n    mainScrollbars.scrollTop(0);\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Скролл на верх страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToBottom() {\r\n    const routeContent = document.getElementById('route-content');\r\n    if (!routeContent) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    mainScrollbars.scrollTop(routeContent.offsetHeight);\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  /**\r\n   * Страницу в PDF\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPageToPDF() {\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'));\r\n    const elements = [];\r\n\r\n    elements.push(document.getElementById('route-content'));\r\n    return await elementsToPdf(elements, filename);\r\n  }\r\n\r\n  /**\r\n   * Элементы в PDF\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionElementsToPDF() {\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'));\r\n    const elements = [];\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return { success: true };\r\n    }\r\n    IDs = IDs.split(',');\r\n    IDs.forEach(elementId => {\r\n      if (!elementId || !elementId.trim()) {\r\n        return;\r\n      }\r\n      getHTMLElementById(elementId.trim()) &&\r\n        elements.push(getHTMLElementById(elementId));\r\n    });\r\n    return await elementsToPdf(elements, filename);\r\n  }\r\n  /**\r\n   * Данные в CSV-файл\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionDataToCSV() {\r\n    let data = getDataByPath(this.getProperty('path'));\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'));\r\n    try {\r\n      return await dataToCSV(data, filename);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { success: false };\r\n    }\r\n  }\r\n  /**\r\n   * HTML-Таблицу в CSV-файл\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTableToCSV() {\r\n    let elementId = this.getProperty('element_id');\r\n    if (!elementId) {\r\n      return { success: true };\r\n    }\r\n    elementId = elementId.trim();\r\n    const element = getHTMLElementById(elementId);\r\n    if (!element) {\r\n      return { success: true };\r\n    }\r\n    let data;\r\n    try {\r\n      data = dataFromTable(element);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { success: false };\r\n    }\r\n    if (_.isEmpty(data)) {\r\n      return { success: true };\r\n    }\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'));\r\n    try {\r\n      return await dataToCSV(data, filename);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { success: false };\r\n    }\r\n  }\r\n  /**\r\n   * HTML-таблицу в XLS-файл\r\n   * @return {Promise}\r\n   */\r\n  async doActionTableToXLS() {\r\n    const elementId = this.getProperty('element_id').trim();\r\n    if (!elementId) {\r\n      console.error('Element ID is not set');\r\n      return { success: true };\r\n    }\r\n\r\n    const table = getHTMLElementById(elementId);\r\n    if (!table) {\r\n      console.error('Table with provided ID is not found');\r\n      return { success: true };\r\n    }\r\n\r\n    let data = dataFromTable(table);\r\n    const formattedData = [];\r\n\r\n    _.each(data, row => formattedData.push(Object.values(row)));\r\n    const templateName = this.getProperty('template_name');\r\n    const rawTemplateData = this.getProperty('template_data');\r\n    const parsedTemplateData = rawTemplateData\r\n      .split('\\n')\r\n      .reduce((data, row) => {\r\n        const keyValuePair = row.split('=');\r\n        data[keyValuePair[0]] = keyValuePair[1];\r\n        return data;\r\n      }, {});\r\n    data = { ...parsedTemplateData, dataArray: formattedData };\r\n    const filename = replaceContentWithData(this.getProperty('name', 'file'));\r\n\r\n    try {\r\n      const blob = await dataToXLS(data, filename, templateName);\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', window.URL.createObjectURL(blob));\r\n      link.setAttribute('download', filename + '.xls');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(error);\r\n      return { success: false };\r\n    }\r\n  }\r\n  /**\r\n   * действие-логин\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionLogin() {\r\n    /**\r\n     *\r\n     * @member {AltrpForm} form\r\n     */\r\n    let form = this.getProperty('_form');\r\n    let success = true;\r\n    form.fields.forEach(field => {\r\n      if (!field.fieldValidate()) {\r\n        success = false;\r\n      }\r\n    });\r\n    if (!success) {\r\n      return { success: false };\r\n    }\r\n\r\n    return await altrpLogin(form.getData(), this.getFormId());\r\n  }\r\n  /**\r\n   * действие-выход из приложения\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionLogout() {\r\n    return await altrpLogout();\r\n  }\r\n  /**\r\n   * действие-установка значения по для пути `path`\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionSetData() {\r\n    let paths = this.getProperty('path');\r\n    const result = {\r\n      success: true\r\n    };\r\n    if (!paths) {\r\n      return result;\r\n    }\r\n    if (paths.indexOf(',') !== -1) {\r\n      paths = paths.split(',').map(path => path.trim());\r\n    } else {\r\n      paths = [paths];\r\n    }\r\n    for (let path of paths) {\r\n      path = replaceContentWithData(path, this.getCurrentModel().getData());\r\n      let value = this.getProperty('value') || '';\r\n      value = value.trim();\r\n      const setType = this.getProperty('set_type');\r\n      let count = this.getProperty('count');\r\n      switch (setType) {\r\n        case 'toggle':\r\n          {\r\n            value = !getDataByPath(path);\r\n            result.success = setDataByPath(path, value);\r\n          }\r\n          break;\r\n        case 'set':\r\n          {\r\n            if (\r\n              value.split(/\\r?\\n/).length === 1 &&\r\n              value.indexOf('{{') === 0 &&\r\n              value.indexOf('}}') === value.length - 2 &&\r\n              getDataByPath(value.replace('{{', '').replace('}}', ''),\r\n                  null,\r\n                  this.getCurrentModel())\r\n            ) {\r\n              value = getDataByPath(\r\n                value.replace('{{', '').replace('}}', ''),\r\n                null,\r\n                this.getCurrentModel()\r\n              );\r\n            } else if( value.indexOf('|') !== -1){\r\n              // value = replaceContentWithData(\r\n              //   value,\r\n              //   this.getCurrentModel().getData()\r\n              // );\r\n\r\n              value = parseParamsFromString(\r\n                value,\r\n                this.getCurrentModel(),\r\n                true\r\n              );\r\n            }\r\n            result.success = setDataByPath(path, value);\r\n          }\r\n          break;\r\n        case 'toggle_set':\r\n          {\r\n            let currentValue = getDataByPath(path);\r\n            value = value.split('\\n').map(v => v.trim());\r\n            if (value.length === 1) {\r\n              value.push('');\r\n            }\r\n            let nextIndex = value.indexOf(currentValue) + 1;\r\n            if (nextIndex >= value.length) {\r\n              nextIndex = 0;\r\n            }\r\n            value = value[nextIndex] || '';\r\n            result.success = setDataByPath(path, value);\r\n          }\r\n          break;\r\n        case 'increment':\r\n          {\r\n            let currentValue = getDataByPath(path);\r\n            currentValue = currentValue\r\n              ? _.isNaN(Number(currentValue))\r\n                ? 1\r\n                : Number(currentValue)\r\n              : Number(!!currentValue);\r\n            count = Number(count) || 1;\r\n            currentValue += count;\r\n            result.success = setDataByPath(path, currentValue);\r\n          }\r\n          break;\r\n        case 'decrement':\r\n          {\r\n            let currentValue = getDataByPath(path);\r\n            currentValue = currentValue\r\n              ? _.isNaN(Number(currentValue))\r\n                ? 1\r\n                : Number(currentValue)\r\n              : Number(!!currentValue);\r\n            count = Number(count) || 1;\r\n            currentValue -= count;\r\n            result.success = setDataByPath(path, currentValue);\r\n          }\r\n          break;\r\n        case 'push_items':\r\n          {\r\n            let currentValue = getDataByPath(path);\r\n            let item = {};\r\n            if (!_.isArray(currentValue)) {\r\n              currentValue = [];\r\n            }\r\n            currentValue = [...currentValue];\r\n            if (_.isObject(getDataByPath(value))) {\r\n              item = getDataByPath(value);\r\n            }\r\n            count = Number(count) || 1;\r\n            if (count < 0) {\r\n              count = 1;\r\n            }\r\n            while (count) {\r\n              _.isArray(item)\r\n                ? currentValue.push([...item])\r\n                : currentValue.push({ ...item });\r\n              --count;\r\n            }\r\n            result.success = setDataByPath(path, currentValue);\r\n          }\r\n          break;\r\n        case 'remove_items':\r\n          {\r\n            let items = path.split(/\\r?\\n/);\r\n            items.forEach(i => {\r\n              if (!i) {\r\n                return;\r\n              }\r\n              i = i.trim();\r\n              if (!i) {\r\n                return;\r\n              }\r\n              if (i.indexOf('{{') !== -1) {\r\n                i = replaceContentWithData(i, this.getCurrentModel().getData());\r\n              }\r\n              let item = getDataByPath(i);\r\n              if (!item) {\r\n                return;\r\n              }\r\n              let listPath = i.replace(/.\\d+$/, '').trim();\r\n              if (!listPath) {\r\n                return;\r\n              }\r\n              let list = getDataByPath(listPath);\r\n              if (!_.isArray(list)) {\r\n                return;\r\n              }\r\n              list = [...list];\r\n              list = list.filter(_item => _item !== item);\r\n              setDataByPath(listPath, list);\r\n            });\r\n            result.success = true;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * действие - манипуляция с элементами форм\r\n   * @return {Promise<{}>}\r\n   */\r\n  doActionFormsManipulate() {\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return { success: true };\r\n    }\r\n    IDs = IDs.split(',');\r\n    const change = this.getProperty('forms_change');\r\n    IDs.forEach(id => {\r\n      let component = getComponentByElementId(id);\r\n      switch (change) {\r\n        case 'select_all':\r\n          {\r\n            if (_.get(component, 'elementRef.current.selectAll')) {\r\n              component.elementRef.current.selectAll();\r\n            }\r\n          }\r\n          break;\r\n        case 'clear':\r\n          {\r\n            if (_.get(component, 'elementRef.current.clearValue')) {\r\n              component.elementRef.current.clearValue();\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    return { success: true };\r\n  }\r\n  /**\r\n   * действие - выполнение пользовательского кода\r\n   * @return {Promise<{}>}\r\n   */\r\n  doActionCustomCode() {\r\n    let code = this.getProperty('code');\r\n    try {\r\n      eval(code);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Evaluate error in doActionCustomCode' + error.message);\r\n      return { success: false };\r\n    }\r\n  }\r\n  /**\r\n   * действие - обновление текущего хранилища\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionUpdateCurrentDatasources() {\r\n    let aliases = this.getProperty('aliases') || '';\r\n    aliases = aliases\r\n      .split(',')\r\n      .map(alias => alias.trim())\r\n      .filter(alias => alias);\r\n    const allDataSources = window.dataStorageUpdater.getProperty(\r\n      'currentDataSources'\r\n    );\r\n    const dataSourcesToUpdate = allDataSources.filter(dataSource => {\r\n      return aliases.indexOf(dataSource.getProperty('alias')) !== -1;\r\n    });\r\n    /**\r\n     * @type {DataStorageUpdater}\r\n     */\r\n    await window.dataStorageUpdater.updateCurrent(dataSourcesToUpdate, false);\r\n    return { success: true };\r\n  }\r\n  /**\r\n   * Триггер события на другом компоненте\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTrigger() {\r\n    let elementId = this.getProperty('element_id');\r\n    let element = getComponentByElementId(elementId);\r\n    let action = this.getProperty('action');\r\n    if (_.isFunction(element[action])) {\r\n      element[action]();\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    try {\r\n      element.elementRef.current.fireAction(action);\r\n      return {\r\n        success: true\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отправка почты\r\n   */\r\n  async doActionEmail() {\r\n    let templateGUID = this.getProperty('email_template');\r\n    if (!templateGUID) {\r\n      return { success: true };\r\n    }\r\n    let res = { success: false };\r\n    try {\r\n      res = await sendEmail(\r\n        templateGUID,\r\n        this.getReplacedProperty('subject'),\r\n        this.getReplacedProperty('from'),\r\n        this.getReplacedProperty('to'),\r\n        this.getReplacedProperty('attachments')\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Добавляем временную задержку в милисекундах\r\n   */\r\n  async doActionDelay() {\r\n    await delay(this.getProperty('milliseconds') || 0);\r\n    return { success: true };\r\n  }\r\n\r\n  /**\r\n   * Воспроизводим звук\r\n   * @return {Promise<{success: boolean}>}\r\n   */\r\n  async doActionPlaySound() {\r\n    const duration = this.getProperty('milliseconds') || 0;\r\n    const url = this.getProperty('media_url');\r\n    const loop = this.getProperty('loop');\r\n    if (url) {\r\n      const { playSound } = await import('../helpers/sounds');\r\n      playSound(url, loop, duration);\r\n      await delay(20);\r\n    }\r\n    return { success: true };\r\n  }\r\n  /**\r\n   * Проверка условий\r\n   * @return {Promise<{success: boolean}>}\r\n   */\r\n  async doActionCondition() {\r\n    const compare = this.getProperty('compare');\r\n    let conditionLeft = this.getProperty('condition_left');\r\n    let conditionRight = this.getProperty('condition_right');\r\n    conditionLeft = getDataByPath(conditionLeft);\r\n    conditionRight = replaceContentWithData(conditionRight);\r\n    const res = altrpCompare(conditionLeft, conditionRight, compare);\r\n    return { success: res };\r\n  }\r\n\r\n  /**\r\n   * Версия сайта для слабовидящих\r\n   * @return {Promise<void>}\r\n   */\r\n  async doActionVIToggle() {\r\n    try {\r\n      await loadVIPlugin();\r\n    } catch (error) {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    // console.log($);\r\n    let HTMLWrapper = getWrapperHTMLElementByElement(this.getElement());\r\n    // if(HTMLWrapper){\r\n    //   HTMLWrapper.classList.add('bvi-hide');\r\n    // }\r\n\r\n    // $.bvi({\r\n    //   bvi_target: '.altrp-btn',\r\n    //\r\n    // });\r\n\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n}\r\n\r\nexport default AltrpAction;\r\n","/**\r\n * @class ActionsManager\r\n * Класс хранит действия для виджетов и вызывает их последовательно в порядке полученного списка\r\n * @member {} data - где хранятся действия виджета сгруппированные по типу события {\r\n *  widgetId:{\r\n *    eventName: []\r\n *  }\r\n * }\r\n */\r\nimport AltrpAction from \"../AltrpAction\";\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nimport {isEditor} from \"../../helpers\";\r\n\r\nclass ActionsManager extends AltrpModel{\r\n  /**\r\n   * Регистрирует действия для определенного виджета\r\n   * @param {string} widgetId\r\n   * @param {array} actions\r\n   * @param {string} eventName\r\n   * @param {FrontElement | null} element\r\n   * @param {*} context\r\n   */\r\n  registerWidgetActions(widgetId, actions = [], eventName = 'click', element = null, context = null ){\r\n    if((! actions) || ! actions.length){\r\n      return null;\r\n    }\r\n    actions = actions.filter(a=>a.type).map(a=>{\r\n      return new AltrpAction(a, widgetId, element);\r\n    });\r\n    return this.setProperty(`actions.${widgetId}.${eventName}`, actions);\r\n  }\r\n\r\n  /**\r\n   * удаляет все действия виджета\r\n   * @param {string} widgetId\r\n   */\r\n  unregisterWidgetActions(widgetId){\r\n    return this.unsetProperty(`actions.${widgetId}`)\r\n  }\r\n\r\n  /**\r\n   * Вызывает все зарегистрированные действия определенного типа для виджета\r\n   * @param {string} widgetId\r\n   * @param {string} eventName\r\n   * @param {[]} preventedActions\r\n   * @param {FrontElement} element\r\n   * @return {Promise<void>}\r\n   */\r\n  async callAllWidgetActions(widgetId, eventName = 'click', preventedActions, element){\r\n    if(isEditor()){\r\n      return\r\n    }\r\n    preventedActions = preventedActions || [];\r\n    let actions = this.getProperty(`actions.${widgetId}.${eventName}`, []);\r\n    const errors = [];\r\n    if(! actions.length && preventedActions.length && element){\r\n      this.registerWidgetActions(widgetId, preventedActions, eventName, element);\r\n      actions = this.getProperty(`actions.${widgetId}.${eventName}`, []);\r\n    }\r\n    for (let action of actions){\r\n      try {\r\n        let result = await action.doAction();\r\n        if(! result.success){\r\n          if(result.error){\r\n            console.error(result.error);\r\n            errors.push(result.error);\r\n          }\r\n          break;\r\n        }\r\n      } catch(error){\r\n        errors.push(error);\r\n        console.error(error);\r\n      }\r\n    }\r\n    if (errors.length){\r\n      return {\r\n        success: false,\r\n        errors\r\n      }\r\n    }\r\n    return {success: true};\r\n  }\r\n}\r\nwindow.actionsManager = new ActionsManager;\r\nexport default window.actionsManager","/**\r\n * Включаем версию сайта для слабовидящих\r\n */\r\nexport function vIOn(){\r\n  if(document.getElementsByClassName('bvi-body').length){\r\n    return;\r\n  }\r\n  const link = document.body.appendChild(document.createElement('a'));\r\n  link.classList.add('altrp-bvi-open');\r\n  $.bvi({\r\n    bvi_target: '.altrp-bvi-open'\r\n  });\r\n  link.click();\r\n  link.remove();\r\n}\r\n/**\r\n * Загружаем BVI, если не заргужен\r\n * @param {boolean} init - нужно ли включать\r\n * @return {Promise<void>}\r\n */\r\nexport async function loadVIPlugin(init = true){\r\n  await loadJQuery();\r\n\r\n  if(document.querySelector('link[href=\"/plugins/button-visually-impaired-javascript/css/bvi.min.css\"]')\r\n      // && document.querySelector('script[src=\"/plugins/button-visually-impaired-javascript/js/js.cookie.min.js\"]')\r\n      // && document.querySelector('script[src=\"/plugins/button-visually-impaired-javascript/js/bvi-init.min.js\"]')\r\n      && document.querySelector('script[src=\"/plugins/button-visually-impaired-javascript/js/bvi.min.js\"]')\r\n  ){\r\n    init && vIOn();\r\n    return;\r\n  }\r\n\r\n  const bVIStyles = document.head.appendChild(document.createElement('link'));\r\n  bVIStyles.setAttribute('href', '/plugins/button-visually-impaired-javascript/css/bvi.min.css');\r\n  bVIStyles.setAttribute('rel', 'stylesheet');\r\n\r\n  const style = document.head.appendChild(document.createElement('style'));\r\n  style.setAttribute('type', 'text/css');\r\n  // language=CSS\r\n  const css = `\r\n  .bvi-body{\r\n    height: 100%;\r\n  }\r\n  .bvi-link-copy{\r\n    display: none!important;\r\n  }\r\n  .bvi-hide.admin-bar,\r\n  .bvi-hide.altrp-element{\r\n    display: flex;\r\n  }\r\n  `;\r\n  if (style.styleSheet){\r\n    // This is required for IE8 and below.\r\n    style.styleSheet.cssText = css;\r\n  } else {\r\n    style.appendChild(document.createTextNode(css));\r\n  }\r\n\r\n  // const jsCookieScript = document.head.appendChild(document.createElement('script'));\r\n  // jsCookieScript.setAttribute('src', '/plugins/button-visually-impaired-javascript/js/js.cookie.min.js');\r\n\r\n  const bVIScript = document.head.appendChild(document.createElement('script'));\r\n  bVIScript.setAttribute('src', '/plugins/button-visually-impaired-javascript/js/bvi.min.js');\r\n\r\n  // const bVIInitScript = document.head.appendChild(document.createElement('script'));\r\n  // bVIInitScript.setAttribute('src', '/plugins/button-visually-impaired-javascript/js/bvi-init.min.js');\r\n\r\n  let resolve, reject;\r\n  const promise = new Promise((res, rej) => {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n\r\n  \r\n  let scriptsLoaded = 0;\r\n  const loadChecker = ()=>{\r\n    if(++scriptsLoaded < 2){\r\n      return;\r\n    }\r\n    init && vIOn();\r\n    resolve && resolve();\r\n  };\r\n\r\n  bVIStyles.onload = loadChecker;\r\n  // jsCookieScript.onload = loadChecker;\r\n  bVIScript.onload = loadChecker;\r\n\r\n  bVIStyles.onerror = () => {\r\n    reject && reject()\r\n  };\r\n  // jsCookieScript.onerror = () => {\r\n  //   reject && reject()\r\n  // };\r\n  // bVIInitScript.onerror = () => {\r\n  //   reject && reject()\r\n  // };\r\n  bVIScript.onerror = () => {\r\n    reject && reject()\r\n  };\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Загружаем jQuery, если не заргужен\r\n * @return {Promise<void>}\r\n */\r\nexport async function loadJQuery(){\r\n  if(document.querySelector('script[src=\"/plugins/jquery.js\"]')){\r\n    return;\r\n  }\r\n\r\n  const jQueryScript = document.head.appendChild(document.createElement('script'));\r\n  jQueryScript.setAttribute('src', '/plugins/jquery.js');\r\n\r\n  let resolve, reject;\r\n  const promise = new Promise((res, rej) => {\r\n    resolve = res;\r\n    reject = rej;\r\n  });\r\n  jQueryScript.onload = () => {\r\n    resolve && resolve()\r\n  };\r\n  jQueryScript.onerror = () => {\r\n    reject && reject()\r\n  };\r\n\r\n  return promise;\r\n}","import {changeCurrentEmailTemplate} from \"../store/current-email-template/actions\";\r\nimport {delay} from '../helpers';\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\n/**\r\n * Отправляет шаблон письма на бэкенд\r\n * @param {string | null}emailTemplateGUID\r\n * @param {string} subject\r\n * @param {string} from\r\n * @param {string} to\r\n * @param {string} attachments\r\n * @return {Promise<void>}\r\n */\r\nexport async function sendEmail(emailTemplateGUID = null, subject = 'Message', from = '', to = '', attachments = ''){\r\n  if(! emailTemplateGUID){\r\n    return {success: true};\r\n  }\r\n  let templateLoader = (await import('../../../../editor/src/js/classes/modules/TemplateLoader')).default;\r\n  let template = await templateLoader.loadTemplate(emailTemplateGUID);\r\n  appStore.dispatch(changeCurrentEmailTemplate(template));\r\n  let html = '';\r\n  do{\r\n    await delay(1500);\r\n    if(_.get(window, 'emailTemplatesRenderer.emailTemplate.current')){\r\n      /**\r\n       * @var  {HTMLElement} html\r\n       */\r\n      html = window.emailTemplatesRenderer.emailTemplate.current.cloneNode(true);\r\n      html.style.display = 'table';\r\n      html = html.outerHTML;\r\n    }\r\n  }while(! html);\r\n  // appStore.dispatch(changeCurrentEmailTemplate(null));\r\n  const resource = new Resource({route: '/ajax/feedback-html'});\r\n  let res = await resource.post(\r\n    {\r\n      subject,\r\n      to,\r\n      from,\r\n      html,\r\n      attachments,\r\n    }\r\n  );\r\n  return {success: true}\r\n}"],"sourceRoot":""}