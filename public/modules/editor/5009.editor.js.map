{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js"],"names":["FrontElementsFabric","object","parent","pageId","models","children","element","FrontElement","addModelInfo","modelName","modelId","_","isArray","model","length","child","window","frontElementsManager","checkElementExists","name","push","this","parseData","id","lastElement","settings","type","dynamicContentSettings","setParent","update","clonedElement","cloneDeep","updateParents","forEach","c","frontElementsFabric"],"mappings":"ivDAEMA,E,gFASJ,SAAUC,EAAQC,EAAQC,EAAQC,GAChC,IAAIC,EAAW,GAIXC,EAAU,IAAIC,IAAaN,GAO/B,GANGE,GACDG,EAAQE,aAAa,CACnBC,UAAW,OACXC,QAASP,IAGVQ,EAAEC,QAAQR,GAAQ,WACFA,GADE,IACnB,2BAAwB,KAAhBS,EAAgB,QACtBP,EAAQE,aAAR,KACOK,KAHU,+BAOrB,GAAIZ,EAAOI,UAAYJ,EAAOI,SAASS,OAAQ,WAC3Bb,EAAOI,UADoB,IAC7C,2BAAkC,KAAzBU,EAAyB,QAChCC,OAAOC,qBAAqBC,mBAAmBH,EAAMI,OACjDd,EAASe,KAAMC,KAAKC,UAAUP,EAAOT,KAHE,+BAiB/C,OAXAA,EAAQiB,GAAKtB,EAAOsB,GACpBjB,EAAQkB,YAAcvB,EAAOuB,YAC7BlB,EAAQD,SAAWA,EACnBC,EAAQmB,SAAWxB,EAAOwB,SAC1BnB,EAAQa,KAAOlB,EAAOkB,KACtBb,EAAQoB,KAAOzB,EAAOyB,KACtBpB,EAAQqB,uBAAyB1B,EAAO0B,uBACrCzB,GACDI,EAAQsB,UAAU1B,GAEpBI,EAAQuB,SACDvB,I,0BAQT,SAAaA,GACX,IAAKA,EACH,OAAO,KAET,IAAIwB,EAAgBnB,EAAEoB,UAAUzB,GAGhC,OADAe,KAAKW,cAAcF,GACZA,I,2BAQT,SAAcxB,GAAQ,WACjBK,EAAEC,QAAQN,EAAQD,WACnBC,EAAQD,SAAS4B,SAAQ,SAAAC,GACvBA,EAAEN,UAAUtB,GACZ,EAAK0B,cAAcE,U,KAM3BlB,OAAOmB,oBAAsB,IAAInC,EACjC,QAAegB,OAAf","file":"5009.editor.js","sourcesContent":["import FrontElement from \"./FrontElement\";\r\n\r\nclass FrontElementsFabric {\r\n  /**\r\n   * парсим данные шаблона\r\n   * @param {object} object\r\n   * @param {FrontElement | null} parent\r\n   * @param {int | null} pageId\r\n   * @param {array | null} models\r\n   * @return {FrontElement}\r\n   */\r\n  parseData(object, parent, pageId, models){\r\n    let children = [];\r\n    /**\r\n     * @member {FrontElement} element\r\n     * */\r\n    let element = new FrontElement(object);\r\n    if(pageId){\r\n      element.addModelInfo({\r\n        modelName: 'page',\r\n        modelId: pageId,\r\n      });\r\n    }\r\n    if(_.isArray(models)){\r\n      for(let model of models){\r\n        element.addModelInfo({\r\n            ...model,\r\n        });\r\n      }\r\n    }\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        window.frontElementsManager.checkElementExists(child.name) ?\r\n            children.push( this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.lastElement = object.lastElement;\r\n    element.children = children;\r\n    element.settings = object.settings;\r\n    element.name = object.name;\r\n    element.type = object.type;\r\n    element.dynamicContentSettings = object.dynamicContentSettings;\r\n    if(parent){\r\n      element.setParent(parent);\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Правильное клонирование элемента\r\n   * @params {FrontElement} element\r\n   * @return {FrontElement | null}\r\n   */\r\n  cloneElement(element){\r\n    if(! element){\r\n      return null;\r\n    }\r\n    let clonedElement = _.cloneDeep(element);\r\n    // console.log(element.idForAction);\r\n    this.updateParents(clonedElement);\r\n    return clonedElement\r\n  }\r\n\r\n  /**\r\n   * Обновляет ссылку на родителя у элементов\r\n   * @params {FrontElement} element\r\n   */\r\n\r\n  updateParents(element){\r\n    if(_.isArray(element.children)){\r\n      element.children.forEach(c=>{\r\n        c.setParent(element);\r\n        this.updateParents(c);\r\n        // console.log(c);\r\n      });\r\n    }\r\n  }\r\n}\r\nwindow.frontElementsFabric = new FrontElementsFabric();\r\nexport default window.frontElementsFabric;\r\n"],"sourceRoot":""}